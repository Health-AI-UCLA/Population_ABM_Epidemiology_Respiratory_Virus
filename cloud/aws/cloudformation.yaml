AWSTemplateFormatVersion: '2010-09-09'
Description: 'COVID-19 ABM Cloud Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name
  
  PopulationSize:
    Type: Number
    Default: 100000
    Description: Population size for simulations
  
  SimulationDays:
    Type: Number
    Default: 365
    Description: Number of simulation days

Resources:
  # S3 Bucket for results
  ResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'population-abm-results-${Environment}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldResults
            Status: Enabled
            ExpirationInDays: 30

  # ECR Repository
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: population-abm-epidemiology
      ImageScanningConfiguration:
        ScanOnPush: true

  # Batch Compute Environment
  BatchComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        MaxvCpus: 100
        DesiredvCpus: 0
        InstanceTypes:
          - m5.large
          - m5.xlarge
          - m5.2xlarge
        SecurityGroupIds:
          - !Ref BatchSecurityGroup
        Subnets:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
        InstanceRole: !Ref BatchInstanceRole

  # Batch Job Queue
  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub 'population-abm-queue-${Environment}'
      Priority: 1
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref BatchComputeEnvironment

  # IAM Roles
  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  BatchInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  BatchJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub '${ResultsBucket}/*'

Outputs:
  ResultsBucketName:
    Description: S3 bucket for simulation results
    Value: !Ref ResultsBucket
    Export:
      Name: !Sub '${AWS::StackName}-ResultsBucket'

  ECRRepositoryURI:
    Description: ECR repository URI
    Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}'
    Export:
      Name: !Sub '${AWS::StackName}-ECRRepository'

  BatchJobQueueArn:
    Description: Batch job queue ARN
    Value: !Ref BatchJobQueue
    Export:
      Name: !Sub '${AWS::StackName}-BatchJobQueue'
