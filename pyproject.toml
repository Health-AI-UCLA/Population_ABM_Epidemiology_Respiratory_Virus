[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "population-abm-epidemiology"
description = "A comprehensive agent-based model for COVID-19 epidemiological simulation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "COVID-19 ABM Development Team", email = "covid-abm@example.com"},
]
maintainers = [
    {name = "COVID-19 ABM Development Team", email = "covid-abm@example.com"},
]
keywords = ["agent-based-model", "epidemiology", "covid-19", "simulation", "public-health"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "networkx>=2.6",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
    "sphinx>=4.0",
    "jupyter>=1.0",
    "notebook>=6.0",
]
cloud = [
    "boto3>=1.20",
    "google-cloud-storage>=2.0",
    "kubernetes>=18.0",
]
analysis = [
    "jupyter>=1.0",
    "seaborn>=0.11",
    "plotly>=5.0",
    "dash>=2.0",
]

[project.urls]
Homepage = "https://github.com/Health-AI-UCLA/Population_ABM_Epidemiology_Respiratory_Virus"
Documentation = "https://population-abm-epidemiology.readthedocs.io/"
Repository = "https://github.com/Health-AI-UCLA/Population_ABM_Epidemiology_Respiratory_Virus.git"
Issues = "https://github.com/Health-AI-UCLA/Population_ABM_Epidemiology_Respiratory_Virus/issues"

[project.scripts]
covid-abm = "covid_abm.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "scipy.*",
    "sklearn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/covid_abm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
